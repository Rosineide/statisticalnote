finenesst[i+1]=cont
}
finenesst[i]=cont
i=i+1
}else{
finenesst[i]=cont
i=i+1
cont=cont+1
}
}
View(finenesst)
#retirando valores inválidos
id1 = which(FALSE!=is.na(millTemp))
id2 = which(FALSE!=is.na(hopperLevel))
id3 = which(FALSE!=is.na(flyAsh))
id4 = which(FALSE!=is.na(thrust1))
id5 = which(FALSE!=is.na(thrust2))
id6 = which(FALSE!=is.na(thrust3))
id7 = which(FALSE!=is.na(cementMill))
id8 = which(FALSE!=is.na(fineness))
millTempn=millTemp[-idg]
#retirando valores inválidos
id1 = which(FALSE!=is.na(millTemp))
id2 = which(FALSE!=is.na(hopperLevel))
id3 = which(FALSE!=is.na(flyAsh))
id4 = which(FALSE!=is.na(thrust1))
id5 = which(FALSE!=is.na(thrust2))
id6 = which(FALSE!=is.na(thrust3))
id7 = which(FALSE!=is.na(cementMill))
id8 = which(FALSE!=is.na(finenesst))
idg=c(id1,id2,id3,id4,id5,id6,id7,id8)
millTempn=millTemp[-idg]
hopperLeveln=hopperLevel[-idg]
flyAshn=flyAsh[-idg]
thrust1n=thrust1[-idg]
thrust2n=thrust2[-idg]
thrust3n=thrust3[-idg]
cementMilln=cementMill[-idg]
finenessn=finenesst[-idg]
dados <- data.frame(millTempn,hopperLeveln,flyAshn,thrust1n,thrust2n,thrust3n,cementMilln,finenessn)
str(dados)
is.na(dados)
sum(is.na(dados))
summary(dados)
res <- cor(dados) # Corr matrix
round(res, 2)
corrplot(cor(dados), method ='pie')
View(finenesst)
fineness
fineness=as.numeric(c(data22_01$`FINENESS`,data28_01$`FINENESS`,data05_02$`FINENESS`,
data11_02$`FINENESS`))
View(fineness)
s
###################### MATRIZ CORRELACAO ######################
finenesst=fineness
cont = 1
i=1
while(i<length(finenesst)){
if(finenesst[i]==finenesst[i+1]){
if((i+1)==length(finenesst)){
finenesst[i+1]=cont
}
finenesst[i]=cont
i=i+1
}else{
finenesst[i]=cont
i=i+1
cont=cont+1
}
}
View(finenesst)
library(readxl)
library(tidyverse)
library(corrplot)
library(dplyr)
data22_01 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-22-01-2019.xlsx")
data28_01 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-28-01-2019.xlsx")
data05_02 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-05-02-2019.xlsx")
data11_02 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-11-02-2019.xlsx")
#Variáveis
millTemp=as.numeric(c(data22_01$`MILL IN TEMP (C) PV`,data28_01$`MILL IN TEMP (C) PV`,
data05_02$`MILL IN TEMP (C) PV`,data11_02$`MILL IN TEMP (C) PV`))
hopperLevel=as.numeric(c(data22_01$`HOPPER LEVEL INDICATOR (mg/mÂ³)`,data28_01$`HOPPER LEVEL INDICATOR (mg/mÂ³)`,
data05_02$`HOPPER LEVEL INDICATOR (mg/mÂ³)`,data11_02$`HOPPER LEVEL INDICATOR (mg/mÂ³)`))
flyAsh=as.numeric(c(data22_01$`FLY ASH2 (ton/h) PV`,data28_01$`FLY ASH2 (ton/h) PV`,
data05_02$`FLY ASH2 (ton/h) PV`,data11_02$`FLY ASH2 (ton/h) PV`))
thrust1=as.numeric(c(data22_01$`THRUST PAD 1 OIL PRESS (bar)`,data28_01$`THRUST PAD 1 OIL PRESS (bar)`,
data05_02$`THRUST PAD 1 OIL PRESS (bar)`,data11_02$`THRUST PAD 1 OIL PRESS (bar)`))
thrust2=as.numeric(c(data22_01$`THRUST PAD 2 OIL PRESS (bar)`,data28_01$`THRUST PAD 2 OIL PRESS (bar)`,
data05_02$`THRUST PAD 2 OIL PRESS (bar)`,data11_02$`THRUST PAD 2 OIL PRESS (bar)`))
thrust3=as.numeric(c(data22_01$`THRUST PAD 3 OIL PRESS (bar)`,data28_01$`THRUST PAD 3 OIL PRESS (bar)`,
data05_02$`THRUST PAD 3 OIL PRESS (bar)`,data11_02$`THRUST PAD 3 OIL PRESS (bar)`))
cementMill=as.numeric(c(data22_01$`CEMENT MILL DP (mbar) PV`,data28_01$`CEMENT MILL DP (mbar) PV`,
data05_02$`CEMENT MILL DP (mbar) PV`,data11_02$`CEMENT MILL DP (mbar) PV`))
fineness=as.numeric(c(data22_01$`FINENESS`,data28_01$`FINENESS`,data05_02$`FINENESS`,
data11_02$`FINENESS`))
#retirando valores inválidos
id1 = which(FALSE!=is.na(millTemp))
id2 = which(FALSE!=is.na(hopperLevel))
id3 = which(FALSE!=is.na(flyAsh))
id4 = which(FALSE!=is.na(thrust1))
id5 = which(FALSE!=is.na(thrust2))
id6 = which(FALSE!=is.na(thrust3))
id7 = which(FALSE!=is.na(cementMill))
id8 = which(FALSE!=is.na(fineness))
idg=c(id1,id2,id3,id4,id5,id6,id7,id8)
millTempn=millTemp[-idg]
hopperLeveln=hopperLevel[-idg]
flyAshn=flyAsh[-idg]
thrust1n=thrust1[-idg]
thrust2n=thrust2[-idg]
thrust3n=thrust3[-idg]
cementMilln=cementMill[-idg]
finenessn=fineness[-idg]
finenesst=finenessn
cont = 1
i=1
while(i<length(finenesst)){
if(finenesst[i]==finenesst[i+1]){
if((i+1)==length(finenesst)){
finenesst[i+1]=cont
}
finenesst[i]=cont
i=i+1
}else{
finenesst[i]=cont
i=i+1
cont=cont+1
}
}
View(finenesst)
dados <- data.frame(millTempn,hopperLeveln,flyAshn,thrust1n,thrust2n,thrust3n,cementMilln,finenessn)
str(dados)
is.na(dados)
sum(is.na(dados))
summary(dados)
res <- cor(dados) # Corr matrix
round(res, 2)
corrplot(cor(dados), method ='pie')
data <- as.numeric(c(data22_01,data28_01,data05_02,data11_02))
fineness=rbind.data.frame(data22_01$`FINENESS`,data28_01$`FINENESS`,data05_02$`FINENESS`,
data11_02$`FINENESS`)
data <- rbind(data22_01,data28_01,data05_02,data11_02))
data <- rbind(data22_01,data28_01,data05_02,data11_02)
fineness=as.numeric(c(data22_01$`FINENESS`,data28_01$`FINENESS`,data05_02$`FINENESS`,
fineness=as.numeric(c(data22_01$`FINENESS`,data28_01$`FINENESS`,data05_02$`FINENESS`,
data11_02$`FINENESS`))
teste = data$FINENESS
teste = data$FINENESS
library(readxl)
library(tidyverse)
library(corrplot)
library(dplyr)
data22_01 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-22-01-2019.xlsx")
data28_01 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-28-01-2019.xlsx")
data05_02 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-05-02-2019.xlsx")
data11_02 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-11-02-2019.xlsx")
data <- rbind(data22_01,data28_01,data05_02,data11_02)
#Variáveis
millTemp=as.numeric(c(data22_01$`MILL IN TEMP (C) PV`,data28_01$`MILL IN TEMP (C) PV`,
data05_02$`MILL IN TEMP (C) PV`,data11_02$`MILL IN TEMP (C) PV`))
hopperLevel=as.numeric(c(data22_01$`HOPPER LEVEL INDICATOR (mg/mÂ³)`,data28_01$`HOPPER LEVEL INDICATOR (mg/mÂ³)`,
data05_02$`HOPPER LEVEL INDICATOR (mg/mÂ³)`,data11_02$`HOPPER LEVEL INDICATOR (mg/mÂ³)`))
flyAsh=as.numeric(c(data22_01$`FLY ASH2 (ton/h) PV`,data28_01$`FLY ASH2 (ton/h) PV`,
data05_02$`FLY ASH2 (ton/h) PV`,data11_02$`FLY ASH2 (ton/h) PV`))
thrust1=as.numeric(c(data22_01$`THRUST PAD 1 OIL PRESS (bar)`,data28_01$`THRUST PAD 1 OIL PRESS (bar)`,
data05_02$`THRUST PAD 1 OIL PRESS (bar)`,data11_02$`THRUST PAD 1 OIL PRESS (bar)`))
thrust2=as.numeric(c(data22_01$`THRUST PAD 2 OIL PRESS (bar)`,data28_01$`THRUST PAD 2 OIL PRESS (bar)`,
data05_02$`THRUST PAD 2 OIL PRESS (bar)`,data11_02$`THRUST PAD 2 OIL PRESS (bar)`))
thrust3=as.numeric(c(data22_01$`THRUST PAD 3 OIL PRESS (bar)`,data28_01$`THRUST PAD 3 OIL PRESS (bar)`,
data05_02$`THRUST PAD 3 OIL PRESS (bar)`,data11_02$`THRUST PAD 3 OIL PRESS (bar)`))
cementMill=as.numeric(c(data22_01$`CEMENT MILL DP (mbar) PV`,data28_01$`CEMENT MILL DP (mbar) PV`,
data05_02$`CEMENT MILL DP (mbar) PV`,data11_02$`CEMENT MILL DP (mbar) PV`))
fineness=as.numeric(c(data22_01$`FINENESS`,data28_01$`FINENESS`,data05_02$`FINENESS`,
data11_02$`FINENESS`))
teste = data$FINENESS
View(teste)
View(fineness)
library(readxl)
library(tidyverse)
library(corrplot)
data22_01 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-22-01-2019.xlsx")
data28_01 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-28-01-2019.xlsx")
data05_02 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-05-02-2019.xlsx")
data11_02 <- read_excel("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO/Mill_Data-11-02-2019.xlsx")
tables <- rbind(data22_01,data28_01,data05_02,data11_02)
#Variáveis
millTemp=as.numeric(tables$`MILL IN TEMP (C) PV`)
hopperLevel=as.numeric(tables$`HOPPER LEVEL INDICATOR (mg/mÂ³)`)
flyAsh=as.numeric(tables$`FLY ASH2 (ton/h) PV`)
thrust1=as.numeric(tables$`THRUST PAD 1 OIL PRESS (bar)`)
thrust2=as.numeric(tables$`THRUST PAD 2 OIL PRESS (bar)`)
thrust3=as.numeric(tables$`THRUST PAD 3 OIL PRESS (bar)`)
cementMill=as.numeric(tables$`CEMENT MILL DP (mbar) PV`)
fineness=as.numeric(tables$`FINENESS`)
plot(millTemp,type = "l",ylab = "Mill in temp (C)",xlab = "")
plot(hopperLevel,type = "l",ylab = "Hopper level indicator (mg/mÂ³)",xlab = "")
plot(millTemp,type = "l",ylab = "Mill in temp (C)",xlab = "")
plot(hopperLevel,type = "l",ylab = "Hopper level indicator (mg/mÂ³)",xlab = "")
plot(flyAsh,type = "l",ylab = "Fly ash 2 (ton/h) PV",xlab = "")
plot(thrust1,type = "l",ylab = "Thrust pad 1 oil press (bar) PV",xlab = "")
plot(thrust2,type = "l",ylab = "Thrust pad 2 oil press (bar) PV",xlab = "")
plot(thrust3,type = "l",ylab = "Thrust pad 3 oil press (bar) PV",xlab = "")
plot(cementMill,type = "l",ylab = "Cement mill DP (mbar) PV",xlab = "")
plot(fineness,type = "l",ylab = "Fineness",xlab = "")
hist(millTemp,xlab="Mill in temp (C)",main="",xlim = c(35,175))
hist(millTemp,xlab="Mill in temp (C)",main="",xlim = c(35,175))
plot(fineness,type = "l",ylab = "Fineness",xlab = "")
plot(fineness,ylab = "Fineness",xlab = "")
plot(fineness,type = "l",ylab = "Fineness",xlab = "")
hist(millTemp,xlab="Mill in temp (C)",main="",xlim = c(35,175))
hist(hopperLevel,xlab = "Hopper level indicator (mg/mÂ³)",main="",,xlim = c(0,40))
hist(flyAsh,xlab = "Fly ash 2 (ton/h) PV",main="")
hist(thrust1,xlab = "Thrust pad 1 oil press (bar) PV",main="")
hist(thrust2,xlab = "Thrust pad 2 oil press (bar) PV",main="")
hist(thrust3,xlab = "Thrust pad 3 oil press (bar) PV",main="")
hist(cementMill,xlab = "Cement mill DP (mbar) PV",main="")
hist(fineness,xlab = "Fineness",main="")
corMillTemp=data.frame(cbind(millTemp,fineness))
ggplot(aes(x=fineness,y=millTemp),data=corMillTemp)+
geom_point()
corHopperLevel=data.frame(cbind(hopperLevel,fineness))
ggplot(aes(x=fineness,y=hopperLevel),data=corHopperLevel)+
geom_point()
corFlyAsh=data.frame(cbind(flyAsh,fineness))
ggplot(aes(x=fineness,y=flyAsh),data=corFlyAsh)+
geom_point()
corThrust1=data.frame(cbind(thrust1,fineness))
ggplot(aes(x=fineness,y=thrust1),data=corThrust1)+
geom_point()
corThrust2=data.frame(cbind(thrust2,fineness))
ggplot(aes(x=fineness,y=thrust2),data=corThrust2)+
geom_point()
corThrust3=data.frame(cbind(thrust3,fineness))
ggplot(aes(x=fineness,y=thrust3),data=corThrust3)+
geom_point()
corCementMill=data.frame(cbind(cementMill,fineness))
ggplot(aes(x=fineness,y=cementMill),data=corCementMill)+
geom_point()
#retirando valores inválidos
id1 = which(FALSE!=is.na(millTemp))
id2 = which(FALSE!=is.na(hopperLevel))
id3 = which(FALSE!=is.na(flyAsh))
id4 = which(FALSE!=is.na(thrust1))
id5 = which(FALSE!=is.na(thrust2))
id6 = which(FALSE!=is.na(thrust3))
id7 = which(FALSE!=is.na(cementMill))
id8 = which(FALSE!=is.na(fineness))
id9=which(x<5)
id10=which(x>110)
idg=c(id1,id2,id3,id4,id5,id6,id7,id8)
millTempn=millTemp[-idg]
hopperLeveln=hopperLevel[-idg]
flyAshn=flyAsh[-idg]
thrust1n=thrust1[-idg]
thrust2n=thrust2[-idg]
thrust3n=thrust3[-idg]
cementMilln=cementMill[-idg]
finenessn=fineness[-idg]
finenesst=finenessn
cont = 1
i=1
while(i<length(finenesst)){
if(finenesst[i]==finenesst[i+1]){
if((i+1)==length(finenesst)){
finenesst[i+1]=cont
}
finenesst[i]=cont
i=i+1
}else{
finenesst[i]=cont
i=i+1
cont=cont+1
}
}
View(finenesst)
while(i<length(finenesst)){
if(finenesst[i]==finenesst[i+1]){
if((i+1)==length(finenesst)){
finenesst[i+1]=cont
}
finenesst[i]=cont
i=i+1
}else{
finenesst[i]=cont
i=i+1
cont=cont+1
}
}
dados <- data.frame(millTempn,hopperLeveln,flyAshn,thrust1n,thrust2n,thrust3n,cementMilln,finenessn)
str(dados)
is.na(dados)
sum(is.na(dados))
summary(dados)
res <- cor(dados) # Corr matrix
round(res, 2)
corrplot(cor(dados), method ='pie')
summary(dados)
library(readxl)
library(tidyverse)
library(corrplot)
library(gridExtra)
par(mfrow=c(1,3))
###################### DADOS ######################
setwd("/media/denise/HD/Ciencia-da-Computacao/LTI/Projeto Apodi/analiseFinuraCimento/Dados CMO")
data22_01 <- read_excel("Mill_Data-22-01-2019.xlsx")
data23_01 <- read_excel("Mill_Data-23-01-2019.xlsx")
data24_01 <- read_excel("Mill_Data-24-01-2019.xlsx")
data25_01 <- read_excel("Mill_Data-25-01-2019.xlsx")
data26_01 <- read_excel("Mill_Data-26-01-2019.xlsx")
data27_01 <- read_excel("Mill_Data-27-01-2019.xlsx")
data28_01 <- read_excel("Mill_Data-28-01-2019.xlsx")
data31_01 <- read_excel("Mill_Data-31-01-2019.xlsx")
data01_02 <- read_excel("Mill_Data-1-02-2019.xlsx")
data02_02 <- read_excel("Mill_Data-02-02-2019.xlsx")
data03_02 <- read_excel("Mill_Data-03-02-2019.xlsx")
data04_02 <- read_excel("Mill_Data-04-02-2019.xlsx")
data05_02 <- read_excel("Mill_Data-05-02-2019.xlsx")
data07_02 <- read_excel("Mill_Data-07-02-2019.xlsx")
data08_02 <- read_excel("Mill_Data-08-02-2019.xlsx")
data09_02 <- read_excel("Mill_Data-09-02-2019.xlsx")
data10_02 <- read_excel("Mill_Data-10-02-2019.xlsx")
data11_02 <- read_excel("Mill_Data-11-02-2019.xlsx")
data12_02 <- read_excel("Mill_Data-12-02-2019.xlsx")
data14_02 <- read_excel("Mill_Data-14-02-2019.xlsx")
tables <- rbind(data22_01,data23_01,data24_01,data25_01,data26_01,data27_01,
data28_01,data31_01,data01_02,data02_02,data03_02,data04_02,
data05_02,data07_02,data08_02,data09_02,data10_02,data11_02,
data12_02,data14_02)
###################### VARIAVEIS ######################
#verifiando nome das variaveis
attach(tables)
vars=names(tables)
#numero de variaveis
nvar=length(vars)
#Variaveis
millTemp=as.numeric(tables$`MILL IN TEMP (C) PV`)
hopperLevel=as.numeric(tables$`HOPPER LEVEL INDICATOR (mg/mÂ³)`)
flyAsh=as.numeric(tables$`FLY ASH2 (ton/h) PV`)
thrust1=as.numeric(tables$`THRUST PAD 1 OIL PRESS (bar)`)
thrust2=as.numeric(tables$`THRUST PAD 2 OIL PRESS (bar)`)
thrust3=as.numeric(tables$`THRUST PAD 3 OIL PRESS (bar)`)
cementMill=as.numeric(tables$`CEMENT MILL DP (mbar) PV`)
fineness=as.numeric(tables$`FINENESS`)
totalFeed=as.numeric(tables$`TOTAL FEED (ton/h) PV`)
#filtro
filt=which(totalFeed>5)
#variaveis com filtro
millTempf=millTemp[filt]
hopperLevelf=hopperLevel[filt]
flyAshf=flyAsh[filt]
thrust1f=thrust1[filt]
thrust2f=thrust2[filt]
thrust3f=thrust3[filt]
cementMillf=cementMill[filt]
finenessf=fineness[filt]
totalFeedf=totalFeed[filt]
#retirando valores inválidos
id1 = which(FALSE!=is.na(millTempf))
id2 = which(FALSE!=is.na(hopperLevelf))
id3 = which(FALSE!=is.na(flyAshf))
id4 = which(FALSE!=is.na(thrust1f))
id5 = which(FALSE!=is.na(thrust2f))
id6 = which(FALSE!=is.na(thrust3f))
id7 = which(FALSE!=is.na(cementMillf))
id8 = which(FALSE!=is.na(finenessf))
id9 = which(FALSE!=is.na(totalFeedf))
idg=c(id1,id2,id3,id4,id5,id6,id7,id8,id9)
millTempn=millTempf[-idg]
hopperLeveln=hopperLevelf[-idg]
flyAshn=flyAshf[-idg]
thrust1n=thrust1f[-idg]
thrust2n=thrust2f[-idg]
thrust3n=thrust3f[-idg]
cementMilln=cementMillf[-idg]
finenessn=finenessf[-idg]
totalFeedn=totalFeedf[-idg]
millTempfilt = NULL
hopperLevelfilt = NULL
flyAshfilt = NULL
thrust1filt = NULL
thrust2filt = NULL
thrust3filt = NULL
cementMillfilt = NULL
finenessfilt = NULL
totalFeedfilt = NULL
j = 1
i=1
while(i<length(finenessn)){
n=0
if(finenessn[i]!=finenessn[i+1]){
if((i-60)>j){
for(k in j:(i-60)){
millTempfilt[length(millTempfilt)+1]= millTempn[k]
hopperLevelfilt[length(hopperLevelfilt)+1]= hopperLeveln[k]
flyAshfilt[length(flyAshfilt)+1]= flyAshn[k]
thrust1filt[length(thrust1filt)+1]= thrust1n[k]
thrust2filt[length(thrust2filt)+1]= thrust2n[k]
thrust3filt[length(thrust3filt)+1]= thrust3n[k]
cementMillfilt[length(cementMillfilt)+1]= cementMilln[k]
finenessfilt[length(finenessfilt)+1]= finenessn[k]
totalFeedfilt[length(totalFeedfilt)+1]= totalFeedn[k]
}
}else{
for(k in j:i){
millTempfilt[length(millTempfilt)+1]= millTempn[k]
hopperLevelfilt[length(hopperLevelfilt)+1]= hopperLeveln[k]
flyAshfilt[length(flyAshfilt)+1]= flyAshn[k]
thrust1filt[length(thrust1filt)+1]= thrust1n[k]
thrust2filt[length(thrust2filt)+1]= thrust2n[k]
thrust3filt[length(thrust3filt)+1]= thrust3n[k]
cementMillfilt[length(cementMillfilt)+1]= cementMilln[k]
finenessfilt[length(finenessfilt)+1]= finenessn[k]
totalFeedfilt[length(totalFeedfilt)+1]= totalFeedn[k]
}
}
if((i+1)==length(finenessn)){
millTempfilt[length(millTempfilt)+1]= millTempn[(i+1)]
hopperLevelfilt[length(hopperLevelfilt)+1]= hopperLeveln[(i+1)]
flyAshfilt[length(flyAshfilt)+1]= flyAshn[(i+1)]
thrust1filt[length(thrust1filt)+1]= thrust1n[(i+1)]
thrust2filt[length(thrust2filt)+1]= thrust2n[(i+1)]
thrust3filt[length(thrust3filt)+1]= thrust3n[(i+1)]
cementMillfilt[length(cementMillfilt)+1]= cementMilln[(i+1)]
finenessfilt[length(finenessfilt)+1]= finenessn[(i+1)]
totalFeedfilt[length(totalFeedfilt)+1]= totalFeedn[(i+1)]
}
i=i+1
j=i
}else{
if((i+1)==length(finenessn)){
if((i-60)>j){
for(k in j:(i+1-60)){
millTempfilt[length(millTempfilt)+1]= millTempn[k]
hopperLevelfilt[length(hopperLevelfilt)+1]= hopperLeveln[k]
flyAshfilt[length(flyAshfilt)+1]= flyAshn[k]
thrust1filt[length(thrust1filt)+1]= thrust1n[k]
thrust2filt[length(thrust2filt)+1]= thrust2n[k]
thrust3filt[length(thrust3filt)+1]= thrust3n[k]
cementMillfilt[length(cementMillfilt)+1]= cementMilln[k]
finenessfilt[length(finenessfilt)+1]= finenessn[k]
totalFeedfilt[length(totalFeedfilt)+1]= totalFeedn[k]
}
}else{
for(k in j:(i+1)){
finenessfilt[length(finenessfilt)+1]= finenessn[k]
}
}
}
i=i+1
}
}
millTempm = NULL
hopperLevelm = NULL
flyAshm = NULL
thrust1m = NULL
thrust2m = NULL
thrust3m = NULL
cementMillm = NULL
finenessm = NULL
totalFeedm = NULL
j = 1
i=1
while(i<length(finenessfilt)){
n=0
if(finenessfilt[i]!=finenessfilt[i+1]){
n=i-j+1
millTempm[length(millTempm)+1] = sum(millTempfilt[j:i])/n
hopperLevelm[length(hopperLevelm)+1] = sum(hopperLevelfilt[j:i])/n
flyAshm[length(flyAshm)+1] = sum(flyAshfilt[j:i])/n
thrust1m[length(thrust1m)+1] = sum(thrust1filt[j:i])/n
thrust2m[length(thrust2m)+1] = sum(thrust2filt[j:i])/n
thrust3m[length(thrust3m)+1] = sum(thrust3filt[j:i])/n
cementMillm[length(cementMillm)+1] = sum(cementMillfilt[j:i])/n
finenessm[length(finenessm)+1]=sum(finenessfilt[j:i])/n
totalFeedm[length(totalFeedm)+1]=sum(totalFeedfilt[j:i])/n
if((i+1)==length(finenessfilt)){
millTempm[length(millTempm)+1] = millTempfilt[i+1]
hopperLevelm[length(hopperLevelm)+1] = hopperLevelfilt[i+1]
flyAshm[length(flyAshm)+1] = flyAshfilt[i+1]
thrust1m[length(thrust1m)+1] = thrust1filt[i+1]
thrust2m[length(thrust2m)+1] = thrust2filt[i+1]
thrust3m[length(thrust3m)+1] = thrust3filt[i+1]
cementMillm[length(cementMillm)+1] = cementMillfilt[i+1]
finenessm[length(finenessm)+1]= finenessfilt[i+1]
totalFeedm[length(totalFeedm)+1]= totalFeedfilt[i+1]
}
i=i+1
j=i
}else{
if((i+1)==length(finenessfilt)){
millTempm[length(millTempm)+1] = millTempfilt[i+1]
hopperLevelm[length(hopperLevelm)+1] = hopperLevelfilt[i+1]
flyAshm[length(flyAshm)+1] = flyAshfilt[i+1]
thrust1m[length(thrust1m)+1] = thrust1filt[i+1]
thrust2m[length(thrust2m)+1] = thrust2filt[i+1]
thrust3m[length(thrust3m)+1] = thrust3filt[i+1]
cementMillm[length(cementMillm)+1] = cementMillfilt[i+1]
finenessm[length(finenessm)+1]=finenessfilt[i+1]
totalFeedm[length(totalFeedm)+1]= totalFeedfilt[i+1]
}
i=i+1
}
}
###################### MATRIZ CORRELACAO ######################
#criando base
dados <- data.frame(millTempn,hopperLeveln,flyAshn,thrust1n,thrust2n,thrust3n,cementMilln,finenessn)
colSds(dados)
colSd(dados)
colsd(dados)
library("matrixStats")
install.packages(matrixStats)
